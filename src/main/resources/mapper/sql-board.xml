<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.localmarket.mapper.BoardMapper">

    <!-- Board 결과 매핑 -->
    <resultMap id="BoardResultMap" type="com.localmarket.domain.Board">
        <id property="boardId" column="board_id"/>
        <result property="boardTitle" column="board_title"/>
        <result property="boardContent" column="board_content"/>
        <result property="hitCnt" column="hit_cnt"/>
        <result property="likeCnt" column="like_cnt"/>
        <result property="writeDate" column="write_date"/>
        <result property="updatedDate" column="updated_date"/>
        <result property="memberNum" column="member_num"/>
        <result property="storeId" column="store_id"/>
        <!-- JOIN 필드들 -->
        <result property="memberName" column="member_name"/>
        <result property="storeName" column="store_name"/>
        <result property="marketName" column="market_name"/>
    </resultMap>

    <!-- 게시글 등록 -->
    <insert id="insertBoard" parameterType="com.localmarket.dto.BoardDto" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO board (
            board_title,
            board_content,
            hit_cnt,
            like_cnt,
            member_num,
            store_id,
            write_date,
            updated_date
        ) VALUES (
            #{boardTitle},
            #{boardContent},
            COALESCE(#{hitCnt}, 0),
            COALESCE(#{likeCnt}, 0),
            #{memberNum},
            #{storeId},
            NOW(),
            NOW()
        )
    </insert>

    <!-- 게시글 조회 (ID별) -->
    <select id="selectBoardById" resultMap="BoardResultMap">
        SELECT 
            b.board_id,
            b.board_title,
            b.board_content,
            b.hit_cnt,
            b.like_cnt,
            b.write_date,
            b.updated_date,
            b.member_num,
            b.store_id,
            m.member_name,
            s.store_name,
            mk.market_name
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        LEFT JOIN store s ON b.store_id = s.store_id
        LEFT JOIN market mk ON s.market_id = mk.market_id
        WHERE b.board_id = #{boardId}
    </select>

    <!-- 전체 게시글 목록 조회 -->
    <select id="selectAllBoards" resultMap="BoardResultMap">
        SELECT 
            b.board_id,
            b.board_title,
            b.board_content,
            b.hit_cnt,
            b.like_cnt,
            b.write_date,
            b.updated_date,
            b.member_num,
            b.store_id,
            m.member_name,
            s.store_name,
            mk.market_name
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        LEFT JOIN store s ON b.store_id = s.store_id
        LEFT JOIN market mk ON s.market_id = mk.market_id
        ORDER BY b.write_date DESC
    </select>

    <!-- 회원별 게시글 조회 -->
    <select id="selectBoardsByMemberNum" resultMap="BoardResultMap">
        SELECT 
            b.board_id,
            b.board_title,
            b.board_content,
            b.hit_cnt,
            b.like_cnt,
            b.write_date,
            b.updated_date,
            b.member_num,
            b.store_id,
            m.member_name,
            s.store_name,
            mk.market_name
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        LEFT JOIN store s ON b.store_id = s.store_id
        LEFT JOIN market mk ON s.market_id = mk.market_id
        WHERE b.member_num = #{memberNum}
        ORDER BY b.write_date DESC
    </select>

    <!-- 가게별 게시글(리뷰) 조회 -->
    <select id="selectBoardsByStoreId" resultMap="BoardResultMap">
        SELECT 
            b.board_id,
            b.board_title,
            b.board_content,
            b.hit_cnt,
            b.like_cnt,
            b.write_date,
            b.updated_date,
            b.member_num,
            b.store_id,
            m.member_name,
            s.store_name,
            mk.market_name
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        INNER JOIN store s ON b.store_id = s.store_id
        INNER JOIN market mk ON s.market_id = mk.market_id
        WHERE b.store_id = #{storeId}
        ORDER BY b.write_date DESC
    </select>

    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="com.localmarket.dto.BoardDto">
        UPDATE board 
        SET 
            board_title = #{boardTitle},
            board_content = #{boardContent},
            updated_date = NOW()
        WHERE board_id = #{boardId}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteBoard">
        DELETE FROM board 
        WHERE board_id = #{boardId}
    </delete>

    <!-- 조회수 증가 -->
    <update id="updateHitCount">
        UPDATE board 
        SET hit_cnt = hit_cnt + 1
        WHERE board_id = #{boardId}
    </update>

    <!-- 좋아요 수 증가/감소 -->
    <update id="updateLikeCount">
        UPDATE board 
        SET like_cnt = GREATEST(0, like_cnt + #{increment})
        WHERE board_id = #{boardId}
    </update>

    <!-- 게시글 검색 (제목 + 내용) -->
    <select id="searchBoards" resultMap="BoardResultMap">
        SELECT 
            b.board_id,
            b.board_title,
            b.board_content,
            b.hit_cnt,
            b.like_cnt,
            b.write_date,
            b.updated_date,
            b.member_num,
            b.store_id,
            m.member_name,
            s.store_name,
            mk.market_name
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        LEFT JOIN store s ON b.store_id = s.store_id
        LEFT JOIN market mk ON s.market_id = mk.market_id
        WHERE b.board_title LIKE CONCAT('%', #{keyword}, '%')
           OR b.board_content LIKE CONCAT('%', #{keyword}, '%')
           OR m.member_name LIKE CONCAT('%', #{keyword}, '%')
           OR s.store_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY b.write_date DESC
    </select>

    <!-- 게시글 통계 (회원별 작성 수) -->
    <select id="selectBoardStatistics" resultMap="BoardResultMap">
        SELECT 
            b.member_num,
            m.member_name,
            COUNT(b.board_id) as hit_cnt,
            SUM(b.like_cnt) as like_cnt,
            MAX(b.write_date) as write_date
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        GROUP BY b.member_num, m.member_name
        ORDER BY COUNT(b.board_id) DESC
    </select>

    <!-- 인기 게시글 조회 (좋아요 많은 순) -->
    <select id="selectPopularBoards" resultMap="BoardResultMap">
        SELECT 
            b.board_id,
            b.board_title,
            b.board_content,
            b.hit_cnt,
            b.like_cnt,
            b.write_date,
            b.updated_date,
            b.member_num,
            b.store_id,
            m.member_name,
            s.store_name,
            mk.market_name
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        LEFT JOIN store s ON b.store_id = s.store_id
        LEFT JOIN market mk ON s.market_id = mk.market_id
        ORDER BY b.like_cnt DESC, b.hit_cnt DESC, b.write_date DESC
        LIMIT #{limit}
    </select>

    <!-- 최신 게시글 조회 -->
    <select id="selectRecentBoards" resultMap="BoardResultMap">
        SELECT 
            b.board_id,
            b.board_title,
            b.board_content,
            b.hit_cnt,
            b.like_cnt,
            b.write_date,
            b.updated_date,
            b.member_num,
            b.store_id,
            m.member_name,
            s.store_name,
            mk.market_name
        FROM board b
        INNER JOIN member m ON b.member_num = m.member_num
        LEFT JOIN store s ON b.store_id = s.store_id
        LEFT JOIN market mk ON s.market_id = mk.market_id
        ORDER BY b.write_date DESC
        LIMIT #{limit}
    </select>

</mapper>