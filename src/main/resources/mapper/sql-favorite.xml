<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.localmarket.mapper.FavoriteMapper">

    <!-- 기본 결과 매핑 -->
    <resultMap id="favoriteResultMap" type="com.localmarket.domain.Favorite">
        <id property="favoriteId" column="favorite_id"/>
        <result property="memberNum" column="member_num"/>
        <result property="targetType" column="target_type"/>
        <result property="targetId" column="target_id"/>
        <result property="createdDate" column="created_date"/>
        <result property="memberName" column="member_name"/>
        <result property="targetName" column="target_name"/>
        <result property="location" column="location"/>
        <result property="marketName" column="market_name"/>
        <result property="marketLocal" column="market_local"/>
        <result property="storeName" column="store_name"/>
        <result property="storeCategory" column="store_category"/>
    </resultMap>

    <!-- 전체 관심 목록 조회 -->
    <select id="selectAllFavorites" resultMap="favoriteResultMap">
        SELECT 
            f.favorite_id,
            f.member_num,
            f.target_type,
            f.target_id,
            f.created_date,
            m.member_name
        FROM favorite f
        INNER JOIN member m ON f.member_num = m.member_num
        ORDER BY f.created_date DESC
    </select>

    <!-- 특정 관심 조회 -->
    <select id="selectFavoriteById" parameterType="Integer" resultMap="favoriteResultMap">
        SELECT 
            f.favorite_id,
            f.member_num,
            f.target_type,
            f.target_id,
            f.created_date,
            m.member_name
        FROM favorite f
        INNER JOIN member m ON f.member_num = m.member_num
        WHERE f.favorite_id = #{favoriteId}
    </select>

    <!-- 관심 등록 -->
    <insert id="insertFavorite" parameterType="com.localmarket.domain.Favorite" useGeneratedKeys="true" keyProperty="favoriteId">
        INSERT INTO favorite (
            member_num,
            target_type,
            target_id,
            created_date
        ) VALUES (
            #{memberNum},
            #{targetType},
            #{targetId},
            NOW()
        )
    </insert>

    <!-- 관심 수정 -->
    <update id="updateFavorite" parameterType="com.localmarket.domain.Favorite">
        UPDATE favorite 
        SET 
            target_type = #{targetType},
            target_id = #{targetId}
        WHERE favorite_id = #{favoriteId}
    </update>

    <!-- 관심 삭제 -->
    <delete id="deleteFavorite" parameterType="Integer">
        DELETE FROM favorite 
        WHERE favorite_id = #{favoriteId}
    </delete>

    <!-- 회원별 관심 목록 조회 -->
    <select id="selectFavoritesByMember" parameterType="Integer" resultMap="favoriteResultMap">
        SELECT 
            f.favorite_id,
            f.member_num,
            f.target_type,
            f.target_id,
            f.created_date,
            m.member_name
        FROM favorite f
        INNER JOIN member m ON f.member_num = m.member_num
        WHERE f.member_num = #{memberNum}
        ORDER BY f.created_date DESC
    </select>

    <!-- 타입별 관심 목록 조회 -->
    <select id="selectFavoritesByType" resultMap="favoriteResultMap">
        SELECT 
            f.favorite_id,
            f.member_num,
            f.target_type,
            f.target_id,
            f.created_date,
            m.member_name
        FROM favorite f
        INNER JOIN member m ON f.member_num = m.member_num
        WHERE f.member_num = #{memberNum} 
          AND f.target_type = #{targetType}
        ORDER BY f.created_date DESC
    </select>

    <!-- 시장 관심 목록 조회 (조인) -->
    <select id="selectMarketFavorites" parameterType="Integer" resultMap="favoriteResultMap">
        SELECT 
            f.favorite_id,
            f.member_num,
            f.target_type,
            f.target_id,
            f.created_date,
            m.member_name,
            mk.market_name as target_name,
            mk.market_local as location,
            mk.market_name,
            mk.market_local
        FROM favorite f
        INNER JOIN member m ON f.member_num = m.member_num
        INNER JOIN market mk ON f.target_id = mk.market_id
        WHERE f.member_num = #{memberNum} 
          AND f.target_type = 'MARKET'
        ORDER BY f.created_date DESC
    </select>

    <!-- 가게 관심 목록 조회 (조인) -->
    <select id="selectStoreFavorites" parameterType="Integer" resultMap="favoriteResultMap">
        SELECT 
            f.favorite_id,
            f.member_num,
            f.target_type,
            f.target_id,
            f.created_date,
            m.member_name,
            s.store_name as target_name,
            mk.market_local as location,
            mk.market_name,
            mk.market_local,
            s.store_name,
            s.store_category
        FROM favorite f
        INNER JOIN member m ON f.member_num = m.member_num
        INNER JOIN store s ON f.target_id = s.store_id
        INNER JOIN market mk ON s.market_id = mk.market_id
        WHERE f.member_num = #{memberNum} 
          AND f.target_type = 'STORE'
        ORDER BY f.created_date DESC
    </select>

    <!-- 관심 등록 여부 확인 -->
    <select id="checkFavoriteExists" resultType="int">
        SELECT COUNT(*)
        FROM favorite
        WHERE member_num = #{memberNum}
          AND target_type = #{targetType}
          AND target_id = #{targetId}
    </select>

    <!-- 조건에 따른 관심 삭제 -->
    <delete id="deleteFavoriteByCondition">
        DELETE FROM favorite
        WHERE member_num = #{memberNum}
          AND target_type = #{targetType}
          AND target_id = #{targetId}
    </delete>

    <!-- 회원별 관심 개수 조회 -->
    <select id="countFavoritesByMember" parameterType="Integer" resultType="int">
        SELECT COUNT(*)
        FROM favorite
        WHERE member_num = #{memberNum}
    </select>

    <!-- 대상별 관심 개수 조회 -->
    <select id="countFavoritesByTarget" resultType="int">
        SELECT COUNT(*)
        FROM favorite
        WHERE target_type = #{targetType}
          AND target_id = #{targetId}
    </select>

    <!-- 인기 시장 조회 (관심 많은 순) -->
    <select id="selectPopularMarkets" resultMap="favoriteResultMap">
        SELECT 
            mk.market_id as target_id,
            mk.market_name as target_name,
            mk.market_local as location,
            mk.market_name,
            mk.market_local,
            COUNT(f.favorite_id) as favorite_count
        FROM market mk
        LEFT JOIN favorite f ON mk.market_id = f.target_id AND f.target_type = 'MARKET'
        GROUP BY mk.market_id, mk.market_name, mk.market_local
        HAVING COUNT(f.favorite_id) > 0
        ORDER BY favorite_count DESC, mk.market_name ASC
        LIMIT 10
    </select>

    <!-- 인기 가게 조회 (관심 많은 순) -->
    <select id="selectPopularStores" resultMap="favoriteResultMap">
        SELECT 
            s.store_id as target_id,
            s.store_name as target_name,
            mk.market_local as location,
            mk.market_name,
            mk.market_local,
            s.store_name,
            s.store_category,
            COUNT(f.favorite_id) as favorite_count
        FROM store s
        INNER JOIN market mk ON s.market_id = mk.market_id
        LEFT JOIN favorite f ON s.store_id = f.target_id AND f.target_type = 'STORE'
        GROUP BY s.store_id, s.store_name, s.store_category, mk.market_name, mk.market_local
        HAVING COUNT(f.favorite_id) > 0
        ORDER BY favorite_count DESC, s.store_name ASC
        LIMIT 10
    </select>

</mapper>