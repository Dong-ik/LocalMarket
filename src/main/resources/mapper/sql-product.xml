<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.localmarket.mapper.ProductMapper">

    <!-- 상품 결과 매핑 -->
    <resultMap id="productResultMap" type="com.localmarket.domain.Product">
        <id property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="productPrice" column="product_price"/>
        <result property="productAmount" column="product_amount"/>
        <result property="productFilename" column="product_filename"/>
        <result property="storeId" column="store_id"/>
        <result property="createdDate" column="created_date"/>
        <result property="updatedDate" column="updated_date"/>
    </resultMap>
    
    <!-- 상품 등록 -->
    <insert id="insertProduct" parameterType="com.localmarket.domain.Product" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO product (
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date
        ) VALUES (
            #{productName}, 
            #{productPrice}, 
            #{productAmount}, 
            #{productFilename}, 
            #{storeId}, 
            NOW()
        )
    </insert>
    
    <!-- 상품 조회 (ID로) -->
    <select id="selectProductById" parameterType="int" resultMap="productResultMap">
        SELECT 
            product_id, 
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date, 
            updated_date
        FROM product 
        WHERE product_id = #{productId}
    </select>
    
    <!-- 전체 상품 목록 조회 -->
    <select id="selectAllProducts" resultMap="productResultMap">
        SELECT 
            product_id, 
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date, 
            updated_date
        FROM product 
        ORDER BY created_date DESC
    </select>
    
    <!-- 가게별 상품 목록 조회 -->
    <select id="selectProductsByStoreId" parameterType="int" resultMap="productResultMap">
        SELECT 
            product_id, 
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date, 
            updated_date
        FROM product 
        WHERE store_id = #{storeId}
        ORDER BY created_date DESC
    </select>
    
    <!-- 상품명으로 검색 -->
    <select id="selectProductsByName" parameterType="string" resultMap="productResultMap">
        SELECT 
            product_id, 
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date, 
            updated_date
        FROM product 
        WHERE product_name LIKE CONCAT('%', #{productName}, '%')
        ORDER BY created_date DESC
    </select>
    
    <!-- 가격 범위로 검색 -->
    <select id="selectProductsByPriceRange" resultMap="productResultMap">
        SELECT 
            product_id, 
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date, 
            updated_date
        FROM product 
        WHERE product_price BETWEEN #{minPrice} AND #{maxPrice}
        ORDER BY product_price ASC
    </select>
    
    <!-- 상품 정보 수정 -->
    <update id="updateProduct" parameterType="com.localmarket.domain.Product">
        UPDATE product 
        SET 
            product_name = #{productName},
            product_price = #{productPrice},
            product_amount = #{productAmount},
            product_filename = #{productFilename},
            updated_date = NOW()
        WHERE product_id = #{productId}
    </update>
    
    <!-- 상품 재고 수량 업데이트 -->
    <update id="updateProductAmount">
        UPDATE product 
        SET 
            product_amount = #{productAmount},
            updated_date = NOW()
        WHERE product_id = #{productId}
    </update>
    
    <!-- 상품 삭제 -->
    <delete id="deleteProduct" parameterType="int">
        DELETE FROM product 
        WHERE product_id = #{productId}
    </delete>
    
    <!-- 재고 있는 상품 목록 조회 -->
    <select id="selectProductsInStock" resultMap="productResultMap">
        SELECT 
            product_id, 
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date, 
            updated_date
        FROM product 
        WHERE product_amount > 0
        ORDER BY product_amount DESC
    </select>
    
    <!-- 재고 부족 상품 목록 조회 -->
    <select id="selectLowStockProducts" parameterType="int" resultMap="productResultMap">
        SELECT 
            product_id, 
            product_name, 
            product_price, 
            product_amount, 
            product_filename, 
            store_id, 
            created_date, 
            updated_date
        FROM product 
        WHERE product_amount &lt;= #{threshold} AND product_amount &gt;= 0
        ORDER BY product_amount ASC
    </select>
    
    <!-- 전체 상품 개수 조회 -->
    <select id="selectTotalProductCount" resultType="int">
        SELECT COUNT(*) FROM product
    </select>
    
    <!-- 가게별 상품 개수 조회 -->
    <select id="selectProductCountByStoreId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM product WHERE store_id = #{storeId}
    </select>

</mapper>