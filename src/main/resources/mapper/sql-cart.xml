<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.localmarket.mapper.CartMapper">

    <!-- 결과 매핑 -->
    <resultMap id="CartResultMap" type="com.localmarket.domain.Cart">
        <id column="cart_id" property="cartId"/>
        <result column="member_num" property="memberNum"/>
        <result column="product_id" property="productId"/>
        <result column="cart_quantity" property="cartQuantity"/>
        <result column="cart_price" property="cartPrice"/>
        <result column="cart_selected" property="cartSelected"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
        <!-- 조인 정보 -->
        <result column="product_name" property="productName"/>
        <result column="product_filename" property="productFilename"/>
        <result column="product_amount" property="productAmount"/>
        <result column="store_name" property="storeName"/>
        <result column="store_id" property="storeId"/>
        <result column="market_name" property="marketName"/>
        <result column="total_price" property="totalPrice"/>
    </resultMap>

    <!-- 장바구니 아이템 추가 -->
    <insert id="insertCartItem" parameterType="com.localmarket.dto.CartDto">
        INSERT INTO cart (
            member_num, 
            product_id, 
            cart_quantity, 
            cart_price, 
            cart_selected,
            created_date
        ) VALUES (
            #{memberNum}, 
            #{productId}, 
            #{cartQuantity}, 
            #{cartPrice}, 
            #{cartSelected},
            NOW()
        )
    </insert>

    <!-- 장바구니 아이템 삭제 -->
    <delete id="deleteCartItem">
        DELETE FROM cart 
        WHERE cart_id = #{cartId}
    </delete>

    <!-- 특정 회원의 장바구니 전체 삭제 -->
    <delete id="deleteAllCartItems">
        DELETE FROM cart 
        WHERE member_num = #{memberNum}
    </delete>

    <!-- 선택된 장바구니 아이템들 삭제 -->
    <delete id="deleteSelectedCartItems">
        DELETE FROM cart 
        WHERE member_num = #{memberNum} 
        AND cart_selected = true
    </delete>

    <!-- 장바구니 아이템 수량 수정 -->
    <update id="updateCartQuantity">
        UPDATE cart 
        SET 
            cart_quantity = #{cartQuantity},
            updated_date = NOW()
        WHERE cart_id = #{cartId}
    </update>

    <!-- 장바구니 아이템 선택 상태 수정 -->
    <update id="updateCartSelected">
        UPDATE cart 
        SET 
            cart_selected = #{cartSelected},
            updated_date = NOW()
        WHERE cart_id = #{cartId}
    </update>

    <!-- 특정 회원의 모든 장바구니 아이템 선택 상태 수정 -->
    <update id="updateAllCartSelected">
        UPDATE cart 
        SET 
            cart_selected = #{cartSelected},
            updated_date = NOW()
        WHERE member_num = #{memberNum}
    </update>

    <!-- 특정 회원의 장바구니 목록 조회 (상품 정보 포함) -->
    <select id="selectCartItemsByMemberNum" resultMap="CartResultMap">
        SELECT 
            c.cart_id,
            c.member_num,
            c.product_id,
            c.cart_quantity,
            c.cart_price,
            c.cart_selected,
            c.created_date,
            c.updated_date,
            p.product_name,
            p.product_filename,
            p.product_amount,
            s.store_name,
            s.store_id,
            m.market_name,
            (c.cart_quantity * c.cart_price) AS total_price
        FROM cart c
        INNER JOIN product p ON c.product_id = p.product_id
        INNER JOIN store s ON p.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        WHERE c.member_num = #{memberNum}
        ORDER BY c.created_date DESC
    </select>

    <!-- 특정 회원의 선택된 장바구니 목록 조회 -->
    <select id="selectSelectedCartItems" resultMap="CartResultMap">
        SELECT 
            c.cart_id,
            c.member_num,
            c.product_id,
            c.cart_quantity,
            c.cart_price,
            c.cart_selected,
            c.created_date,
            c.updated_date,
            p.product_name,
            p.product_filename,
            p.product_amount,
            s.store_name,
            s.store_id,
            m.market_name,
            (c.cart_quantity * c.cart_price) AS total_price
        FROM cart c
        INNER JOIN product p ON c.product_id = p.product_id
        INNER JOIN store s ON p.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        WHERE c.member_num = #{memberNum}
        AND c.cart_selected = true
        ORDER BY c.created_date DESC
    </select>

    <!-- 특정 장바구니 아이템 조회 -->
    <select id="selectCartItemById" resultMap="CartResultMap">
        SELECT 
            c.cart_id,
            c.member_num,
            c.product_id,
            c.cart_quantity,
            c.cart_price,
            c.cart_selected,
            c.created_date,
            c.updated_date,
            p.product_name,
            p.product_filename,
            p.product_amount,
            s.store_name,
            s.store_id,
            m.market_name,
            (c.cart_quantity * c.cart_price) AS total_price
        FROM cart c
        INNER JOIN product p ON c.product_id = p.product_id
        INNER JOIN store s ON p.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        WHERE c.cart_id = #{cartId}
    </select>

    <!-- 특정 회원의 특정 상품 장바구니 아이템 조회 (중복 체크용) -->
    <select id="selectCartItemByMemberAndProduct" resultMap="CartResultMap">
        SELECT 
            cart_id,
            member_num,
            product_id,
            cart_quantity,
            cart_price,
            cart_selected,
            created_date,
            updated_date
        FROM cart 
        WHERE member_num = #{memberNum} 
        AND product_id = #{productId}
    </select>

    <!-- 특정 회원의 장바구니 아이템 개수 -->
    <select id="selectCartItemCount" resultType="int">
        SELECT COUNT(*) 
        FROM cart 
        WHERE member_num = #{memberNum}
    </select>

    <!-- 특정 회원의 선택된 장바구니 아이템 개수 -->
    <select id="selectSelectedCartItemCount" resultType="int">
        SELECT COUNT(*) 
        FROM cart 
        WHERE member_num = #{memberNum} 
        AND cart_selected = true
    </select>

    <!-- 특정 회원의 장바구니 총 금액 -->
    <select id="selectCartTotalPrice" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(cart_quantity * cart_price), 0) 
        FROM cart 
        WHERE member_num = #{memberNum}
    </select>

    <!-- 특정 회원의 선택된 장바구니 총 금액 -->
    <select id="selectSelectedCartTotalPrice" resultType="java.math.BigDecimal">
        SELECT COALESCE(SUM(cart_quantity * cart_price), 0) 
        FROM cart 
        WHERE member_num = #{memberNum} 
        AND cart_selected = true
    </select>

</mapper>