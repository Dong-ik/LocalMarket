<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.localmarket.mapper.MemberMapper">

    <!-- 회원 정보 결과 매핑 -->
    <resultMap id="memberResultMap" type="com.localmarket.domain.Member">
        <id property="memberNum" column="member_num"/>
        <result property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="password" column="password"/>
        <result property="birth" column="birth"/>
        <result property="gender" column="gender"/>
        <result property="national" column="national"/>
        <result property="phone" column="phone"/>
        <result property="memberAddress" column="member_address"/>
        <result property="email" column="email"/>
        <result property="memberGrade" column="member_grade"/>
        <result property="createdDate" column="created_date"/>
    </resultMap>

    <!-- 회원가입 -->
    <insert id="insertMember" parameterType="com.localmarket.domain.Member" useGeneratedKeys="true" keyProperty="memberNum">
        INSERT INTO member (
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        ) VALUES (
            #{memberId}, 
            #{memberName}, 
            #{password}, 
            #{birth}, 
            #{gender}, 
            #{national}, 
            #{phone}, 
            #{memberAddress}, 
            #{email}, 
            #{memberGrade}, 
            #{createdDate}
        )
    </insert>

    <!-- 회원 정보 조회 (회원번호) -->
    <select id="selectMemberByNum" parameterType="int" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        WHERE member_num = #{memberNum}
    </select>

    <!-- 회원 정보 조회 (회원ID) -->
    <select id="selectMemberById" parameterType="string" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        WHERE member_id = #{memberId}
    </select>

    <!-- 회원 정보 조회 (이메일) -->
    <select id="selectMemberByEmail" parameterType="string" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        WHERE email = #{email}
    </select>

    <!-- 회원 정보 조회 (전화번호) -->
    <select id="selectMemberByPhone" parameterType="string" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        WHERE phone = #{phone}
    </select>

    <!-- 로그인 (회원ID와 비밀번호) -->
    <select id="selectMemberForLogin" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        WHERE member_id = #{memberId} AND password = #{password}
    </select>

    <!-- 회원 정보 수정 -->
    <update id="updateMember" parameterType="com.localmarket.domain.Member">
        UPDATE member 
        SET 
            member_name = #{memberName},
            birth = #{birth},
            gender = #{gender},
            national = #{national},
            phone = #{phone},
            member_address = #{memberAddress},
            email = #{email},
            member_grade = #{memberGrade}
        <if test="password != null and password != ''">
            , password = #{password}
        </if>
        WHERE member_num = #{memberNum}
    </update>

    <!-- 회원 삭제 (탈퇴) -->
    <delete id="deleteMember" parameterType="int">
        DELETE FROM member 
        WHERE member_num = #{memberNum}
    </delete>

    <!-- 회원 목록 조회 (관리자용) -->
    <select id="selectAllMembers" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        ORDER BY created_date DESC
    </select>

    <!-- 회원 목록 조회 (페이징) -->
    <select id="selectMembersWithPaging" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        ORDER BY created_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 전체 회원 수 조회 -->
    <select id="selectMemberCount" resultType="int">
        SELECT COUNT(*) FROM member
    </select>

    <!-- 회원ID 중복 체크 -->
    <select id="checkMemberIdExists" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM member WHERE member_id = #{memberId}
    </select>

    <!-- 이메일 중복 체크 -->
    <select id="checkEmailExists" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM member WHERE email = #{email}
    </select>

    <!-- 전화번호 중복 체크 -->
    <select id="checkPhoneExists" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM member WHERE phone = #{phone}
    </select>

    <!-- 회원 등급별 조회 -->
    <select id="selectMembersByGrade" parameterType="string" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        WHERE member_grade = #{memberGrade}
        ORDER BY created_date DESC
    </select>

    <!-- 회원 검색 (이름, 이메일, 전화번호로 검색) -->
    <select id="searchMembers" parameterType="string" resultMap="memberResultMap">
        SELECT 
            member_num, 
            member_id, 
            member_name, 
            password, 
            birth, 
            gender, 
            national, 
            phone, 
            member_address, 
            email, 
            member_grade, 
            created_date
        FROM member 
        WHERE member_name LIKE CONCAT('%', #{keyword}, '%') 
           OR email LIKE CONCAT('%', #{keyword}, '%') 
           OR phone LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY created_date DESC
    </select>

</mapper>