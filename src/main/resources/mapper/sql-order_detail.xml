<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.localmarket.repository.OrderDetailMapper">

    <!-- OrderDetail 결과 매핑 -->
    <resultMap id="orderDetailResultMap" type="com.localmarket.domain.OrderDetail">
        <id property="orderDetailId" column="order_detail_id"/>
        <result property="orderId" column="order_id"/>
        <result property="productId" column="product_id"/>
        <result property="storeId" column="store_id"/>
        <result property="orderQuantity" column="order_quantity"/>
        <result property="orderPrice" column="order_price"/>
        <result property="cancelStatus" column="cancel_status"/>
        <result property="cancelDate" column="cancel_date"/>
        <result property="cancelReason" column="cancel_reason"/>
        <result property="productName" column="product_name"/>
        <result property="productFilename" column="product_filename"/>
        <result property="storeName" column="store_name"/>
        <result property="storeCategory" column="store_category"/>
        <result property="marketName" column="market_name"/>
        <result property="marketLocal" column="market_local"/>
        <result property="memberNum" column="member_num"/>
        <result property="memberName" column="member_name"/>
        <result property="orderStatus" column="order_status"/>
        <result property="orderDate" column="order_date"/>
    </resultMap>

    <!-- 주문 상세 등록 -->
    <insert id="insertOrderDetail" parameterType="com.localmarket.dto.OrderDetailDto" 
            useGeneratedKeys="true" keyProperty="orderDetailId">
        INSERT INTO order_detail (
            order_id, 
            product_id, 
            store_id, 
            order_quantity, 
            order_price, 
            cancel_status, 
            cancel_date, 
            cancel_reason
        ) VALUES (
            #{orderId}, 
            #{productId}, 
            #{storeId}, 
            #{orderQuantity}, 
            #{orderPrice}, 
            #{cancelStatus}, 
            #{cancelDate}, 
            #{cancelReason}
        )
    </insert>

    <!-- 주문 상세 조회 (ID별) -->
    <select id="selectOrderDetailById" parameterType="Integer" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE od.order_detail_id = #{orderDetailId}
    </select>

    <!-- 주문별 상세 목록 조회 -->
    <select id="selectOrderDetailsByOrderId" parameterType="Integer" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE od.order_id = #{orderId}
        ORDER BY od.order_detail_id ASC
    </select>

    <!-- 회원별 주문 상세 조회 -->
    <select id="selectOrderDetailsByMemberNum" parameterType="Integer" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE o.member_num = #{memberNum}
        ORDER BY o.order_date DESC, od.order_detail_id ASC
    </select>

    <!-- 상품별 주문 상세 조회 -->
    <select id="selectOrderDetailsByProductId" parameterType="Integer" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE od.product_id = #{productId}
        ORDER BY o.order_date DESC
    </select>

    <!-- 가게별 주문 상세 조회 -->
    <select id="selectOrderDetailsByStoreId" parameterType="Integer" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE od.store_id = #{storeId}
        ORDER BY o.order_date DESC
    </select>

    <!-- 전체 주문 상세 목록 조회 -->
    <select id="selectAllOrderDetails" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        ORDER BY o.order_date DESC, od.order_detail_id ASC
    </select>

    <!-- 주문 상세 수량 수정 -->
    <update id="updateOrderQuantity">
        UPDATE order_detail 
        SET order_quantity = #{orderQuantity}
        WHERE order_detail_id = #{orderDetailId}
    </update>

    <!-- 주문 상세 가격 수정 -->
    <update id="updateOrderPrice">
        UPDATE order_detail 
        SET order_price = #{orderPrice}
        WHERE order_detail_id = #{orderDetailId}
    </update>

    <!-- 취소 요청 -->
    <update id="updateCancelRequest">
        UPDATE order_detail 
        SET cancel_status = 'REQUESTED',
            cancel_date = NOW(),
            cancel_reason = #{cancelReason}
        WHERE order_detail_id = #{orderDetailId}
    </update>

    <!-- 취소 상태 수정 -->
    <update id="updateCancelStatus">
        UPDATE order_detail 
        SET cancel_status = #{cancelStatus},
            cancel_date = NOW()
        WHERE order_detail_id = #{orderDetailId}
    </update>

    <!-- 주문 상세 삭제 -->
    <delete id="deleteOrderDetail" parameterType="Integer">
        DELETE FROM order_detail 
        WHERE order_detail_id = #{orderDetailId}
    </delete>

    <!-- 취소된 주문 상세 조회 -->
    <select id="selectCancelledOrderDetails" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE od.cancel_status != 'NONE'
        ORDER BY od.cancel_date DESC
    </select>

    <!-- 취소 상태별 조회 -->
    <select id="selectOrderDetailsByCancelStatus" parameterType="String" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE od.cancel_status = #{cancelStatus}
        ORDER BY od.cancel_date DESC
    </select>

    <!-- 주문 상세 검색 -->
    <select id="selectOrderDetailsByKeyword" parameterType="String" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE p.product_name LIKE CONCAT('%', #{keyword}, '%')
           OR s.store_name LIKE CONCAT('%', #{keyword}, '%')
           OR m.market_name LIKE CONCAT('%', #{keyword}, '%')
           OR mb.member_name LIKE CONCAT('%', #{keyword}, '%')
           OR od.order_detail_id LIKE CONCAT('%', #{keyword}, '%')
           OR od.order_id LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY o.order_date DESC
    </select>

    <!-- 주문 상세 통계 조회 -->
    <select id="selectOrderDetailStatistics" resultMap="orderDetailResultMap">
        SELECT 
            od.cancel_status,
            COUNT(*) as order_quantity,
            SUM(od.order_price * od.order_quantity) as order_price,
            DATE(o.order_date) as order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        WHERE o.order_date >= DATE_SUB(NOW(), INTERVAL 30 DAY)
        GROUP BY od.cancel_status, DATE(o.order_date)
        ORDER BY o.order_date DESC
    </select>

    <!-- 기간별 주문 상세 조회 -->
    <select id="selectOrderDetailsByDateRange" resultMap="orderDetailResultMap">
        SELECT 
            od.order_detail_id,
            od.order_id,
            od.product_id,
            od.store_id,
            od.order_quantity,
            od.order_price,
            od.cancel_status,
            od.cancel_date,
            od.cancel_reason,
            p.product_name,
            p.product_filename,
            s.store_name,
            s.store_category,
            m.market_name,
            m.market_local,
            o.member_num,
            mb.member_name,
            o.order_status,
            o.order_date
        FROM order_detail od
        INNER JOIN orders o ON od.order_id = o.order_id
        INNER JOIN product p ON od.product_id = p.product_id
        INNER JOIN store s ON od.store_id = s.store_id
        INNER JOIN market m ON s.market_id = m.market_id
        INNER JOIN member mb ON o.member_num = mb.member_num
        WHERE DATE(o.order_date) BETWEEN #{startDate} AND #{endDate}
        ORDER BY o.order_date DESC, od.order_detail_id ASC
    </select>

</mapper>